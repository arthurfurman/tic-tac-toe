{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","winningSquare","onClick","value","Board","i","this","board","winningSquares","includes","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","newBoard","length","slice","calculateWinner","nextPlayer","newHistory","push","setState","map","move","desc","goBackToMove","status","winner","handleClick","createListItems","Clock","time","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","squares","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gOAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,OCFd,SAASQ,EAAOC,GACd,OACE,wBACAC,UAAWD,EAAME,cAAgB,mBAAqB,SACtDC,QAASH,EAAMG,QAFf,SAGGH,EAAMI,Q,IAKPC,E,kKACN,SAAaC,GAAI,IAAD,OACd,OACE,cAACP,EAAD,CACEK,MAAOG,KAAKP,MAAMQ,MAAMF,GACxBH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,IAClCJ,gBAAeK,KAAKP,MAAMS,gBAAiBF,KAAKP,MAAMS,eAAeC,SAASJ,O,oBAKpF,WACE,OACE,gCACE,sBAAKL,UAAU,YAAf,UACGM,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGM,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGM,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,a,GA3BPC,IAAMC,WAkCpBC,E,kDACN,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXC,QAAU,CAACC,MAAM,GAAGC,KAAK,OACzBC,SAAU,GAJK,E,8CAQnB,WACE,OAAOZ,KAAKQ,MAAMI,QAAU,IAAM,M,yBAGpC,SAAYb,GAAI,IAAD,OACPc,EAAWb,KAAKQ,MAAMC,QAAQT,KAAKQ,MAAMC,QAAQK,OAAS,GAAGC,QAEnE,IAAIC,EAAgBH,KAAaA,EAASd,GAA1C,CAIAc,EAASd,GAAKC,KAAKiB,aACnB,IAAMC,EAAalB,KAAKQ,MAAMC,QAAQM,QACtCG,EAAWC,KAAKN,GAEhBb,KAAKoB,UACH,SAACZ,EAAMf,GAAP,MACC,CAACgB,QAAUS,EAAYN,SAAW,EAAKJ,MAAMI,e,6BAIlD,WAAmB,IAAD,OAChB,OAAOZ,KAAKQ,MAAMC,QAAQY,KAAI,SAACpB,EAAOqB,GACpC,IAAMC,EAAOD,EAAO,cAAgBA,EAAO,mBAC3C,OAAQ,6BACJ,wBAAQ1B,QAAS,kBAAM,EAAK4B,aAAaF,IAAzC,SAAiDC,KADpCD,Q,0BAMrB,SAAaA,GACX,IAAMJ,EAAalB,KAAKQ,MAAMC,QAAQM,MAAM,EAAGO,EAAK,GACpDtB,KAAKoB,SAAS,CAACX,QAASS,EAAYN,UAASU,EAAK,O,oBAGpD,WAAU,IAIJG,EAJG,OACDhB,EAAUT,KAAKQ,MAAMC,QAErBiB,EAASV,EADCP,EAAQA,EAAQK,OAAQ,IAUxC,OALEW,EADEC,EACO,kBAAoBA,EAAOA,OAE3B,mBAAqB1B,KAAKiB,aAInC,sBAAKvB,UAAU,OAAf,UACE,cAAC,EAAD,CAAOA,UAAU,UACjB,sBAAKA,UAAU,aAAf,UAEE,cAAC,EAAD,CACEO,MAAOD,KAAKQ,MAAMC,QAAQT,KAAKQ,MAAMC,QAAQK,OAAS,GACtDlB,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,IACjCG,eAAgBwB,EAASA,EAAOxB,eAAiB,OAEnD,sBAAKR,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAyB+B,IACzB,6BACGzB,KAAK4B,iC,GArECvB,IAAMC,WA+EnBuB,E,kDACJ,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXsB,KAAO,IAAIC,MAHI,E,qDAOnB,WAAqB,IAAD,OAClB/B,KAAKgC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,kCAIJ,WACEC,cAAcnC,KAAKgC,W,kBAGrB,WACEhC,KAAKoB,SAAS,CAACU,KAAM,IAAIC,S,oBAG3B,WACE,OACE,8BACG/B,KAAKQ,MAAMsB,KAAKM,2B,GA1BL/B,IAAMC,WAuC1B,SAASU,EAAgBqB,GAWzB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAvC,EAAI,EAAGA,EAAIuC,EAAMxB,OAAQf,IAAK,CAAC,IAAD,cACnBuC,EAAMvC,GADa,GAC9BwC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIJ,EAAQE,IAAMF,EAAQE,KAAOF,EAAQG,IAAMH,EAAQE,KAAOF,EAAQI,GACpE,MAAO,CAACf,OAAQW,EAAQE,GAAIrC,eAAgB,CAACqC,EAAGC,EAAGC,IAGvD,OAAO,KAtBPC,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,SA0BxB9D,M","file":"static/js/main.a825b649.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n  return (\n    <button \n    className={props.winningSquare ? \"square-highlited\" : \"square\"} \n    onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\nrenderSquare(i) {\n  return (\n    <Square \n      value={this.props.board[i]} \n      onClick={() => this.props.onClick(i)}\n      winningSquare={this.props.winningSquares ? this.props.winningSquares.includes(i) : false}\n      />\n  );\n}\n\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.renderSquare(0)}\n        {this.renderSquare(1)}\n        {this.renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderSquare(3)}\n        {this.renderSquare(4)}\n        {this.renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderSquare(6)}\n        {this.renderSquare(7)}\n        {this.renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n}\n\nclass Game extends React.Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    history : [Array(9).fill(null),],\n    xIsNext : true\n  };\n}\n\nnextPlayer() {\n  return this.state.xIsNext ? 'X' : 'O';\n}\n\nhandleClick(i) {\n  const newBoard = this.state.history[this.state.history.length - 1].slice();\n  // dont respond to click if there is a winner or the square is filled\n  if (calculateWinner(newBoard) || newBoard[i]) {\n    return;\n  }\n  \n  newBoard[i] = this.nextPlayer();\n  const newHistory = this.state.history.slice();\n  newHistory.push(newBoard);\n  // push to array the new board that is created\n  this.setState(\n    (state,props) => \n    ({history : newHistory, xIsNext : !this.state.xIsNext})\n    );\n}\n\ncreateListItems() {\n  return this.state.history.map((board, move) => {\n    const desc = move ? 'Go to move ' + move : 'Go to game start';\n    return (<li key={move}>\n        <button onClick={() => this.goBackToMove(move)}>{desc}</button>\n    </li>);\n  });\n}\n\ngoBackToMove(move) {\n  const newHistory = this.state.history.slice(0, move+1);\n  this.setState({history: newHistory, xIsNext: move%2 ? false : true});\n}\n\nrender() {\n  const history = this.state.history;\n  const current = history[history.length -1];\n  const winner = calculateWinner(current);\n  let status;\n  \n  if (winner) {\n    status = 'The winner is: ' + winner.winner;\n  } else {\n    status = 'Next player is: ' + this.nextPlayer();\n  }\n  \n  return (\n    <div className=\"game\">\n      <Clock className=\"clock\"/>\n      <div className=\"game-board\">\n\n        <Board \n          board={this.state.history[this.state.history.length - 1]} \n          onClick={(i) => this.handleClick(i)}\n          winningSquares={winner ? winner.winningSquares : null}/>\n\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <ol>\n            {this.createListItems()}\n          </ol>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time : new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({time: new Date()});\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.time.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n<Game />,\ndocument.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\nconst lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\nfor (let i = 0; i < lines.length; i++) {\n  const [a, b, c] = lines[i];\n  if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n    return {winner: squares[a], winningSquares: [a, b, c]};\n  }\n}\nreturn null;\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}